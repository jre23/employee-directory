{"version":3,"sources":["utils/API.jsx","components/UserList.jsx","components/UserSearch.jsx","components/UserCategories.jsx","components/UserContainer.jsx","App.jsx","index.jsx"],"names":["search","axios","get","UserList","props","birthdayDate","Date","dob","date","toLocaleDateString","className","src","picture","large","alt","name","first","last","cell","email","UserSearch","style","margin","id","type","placeholder","onChange","handleInputChange","aria-label","color","onClick","resetList","UserCategories","handleSort","value","UserContainer","state","result","phone","birthday","searchInput","resultOriginal","searchRandomUser","API","then","res","setState","data","results","catch","err","console","log","event","keyName","target","getAttribute","sortedArray","slice","sort","a","b","x","y","age","searchInputLower","trim","toLowerCase","resultFiltered","length","filter","item","includes","document","getElementById","this","map","login","uuid","React","Component","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2cf49361.chunk.js","sourcesContent":["// import axios to do a get request to BASEURL for 15 random users \r\nimport axios from \"axios\";\r\n\r\nconst BASEURL = \"https://randomuser.me/api/?results=15\";\r\n\r\nconst search = () => axios.get(BASEURL);\r\n\r\nexport default search;\r\n","import React from \"react\";\r\nimport \"../styles/UserList.css\";\r\n// this UserList component creates the list of random employees\r\nconst UserList = props => {\r\n  // change the API returned birthday format to a more readable format\r\n  let birthdayDate = new Date(props.dob.date).toLocaleDateString(\"en-US\");\r\n  return (\r\n    <>\r\n      <div className=\"row text-center\">\r\n        <div className=\"col-12\">\r\n          <div className=\"row ml-1\">\r\n            <div className=\"col text-break p-0 p-sm-2\">\r\n              <img src={props.picture.large} alt={`random user ${props.name.first}`}></img>\r\n            </div>\r\n            <div className=\"col text-break\">\r\n              <p>{props.name.first} {props.name.last}</p>\r\n            </div>\r\n            <div className=\"col text-break\">\r\n              <p>{props.cell}</p>\r\n            </div>\r\n            <div className=\"col text-break\">\r\n              <p>{props.email}</p>\r\n            </div>\r\n            <div className=\"col text-break\">\r\n              <p> {birthdayDate}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserList;","import React from \"react\";\r\n// this UserSearch component handles the search input and reset list functionality\r\nconst UserSearch = props => {\r\n  return (\r\n    <>\r\n      <div className=\"input-group col-4\" style={{ margin: \"0 auto\" }}>\r\n        <input id=\"search-input\" type=\"text\" placeholder=\"Search\" name=\"searchInput\" onChange={props.handleInputChange} className=\"form-control\" aria-label=\"Text input\" />\r\n      </div>\r\n      <br />\r\n      <button type=\"button\" className=\"btn btn-outline-secondary justify-content-center col-.5 d-flex mx-auto\" style={{ color: \"#689775\" }} onClick={props.resetList}>Reset List</button>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default UserSearch;","import React from \"react\";\r\nimport \"../styles/UserCategories.css\";\r\n// this UserCategories component creates the column titles and handles the sorting of the list by name\r\nconst UserCategories = props => {\r\n  return (\r\n    <div className=\"row text-center\">\r\n      <div className=\"col\">\r\n        <h3 className=\"text-center\">Photo</h3>\r\n      </div>\r\n      <div className=\"col\">\r\n        <span onClick={props.handleSort}><h3 className=\"text-center\" value=\"name\">Name</h3></span>\r\n      </div>\r\n      <div className=\"col\">\r\n        <span onClick={props.handleSort}>\r\n          <h3 className=\"text-center\" value=\"phone\">Phone Number</h3></span>\r\n      </div>\r\n      <div className=\"col\">\r\n        <span onClick={props.handleSort}>\r\n          <h3 className=\"text-center\" value=\"email\">Email</h3></span>\r\n      </div>\r\n      <div className=\"col\">\r\n        <span onClick={props.handleSort}>\r\n          <h3 className=\"text-center\" value=\"birthday\">Birthday</h3></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserCategories;","import React from \"react\";\r\nimport API from \"../utils/API\";\r\nimport UserList from \"./UserList\";\r\nimport UserSearch from \"./UserSearch\";\r\nimport UserCategories from \"./UserCategories\";\r\n\r\nclass UserContainer extends React.Component {\r\n  // initialize state variables\r\n  state = {\r\n    result: [],\r\n    name: false,\r\n    phone: false,\r\n    email: false,\r\n    birthday: false,\r\n    searchInput: \"\",\r\n    resultOriginal: []\r\n  };\r\n  // when component mounts, make api call to populate UI\r\n  componentDidMount() {\r\n    this.searchRandomUser();\r\n  }\r\n  // this function calls the API util and sets the result state to the data results\r\n  searchRandomUser = () => {\r\n    API()\r\n      .then(res => {\r\n        this.setState({\r\n          result: res.data.results,\r\n          resultOriginal: res.data.results\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  // handle sort\r\n  handleSort = event => {\r\n    let keyName = event.target.getAttribute(\"value\");\r\n    let sortedArray = this.state.result.slice().sort((a, b) => {\r\n      let x = \"\";\r\n      let y = \"\";\r\n      switch (keyName) {\r\n        case \"name\":\r\n          x = a.name.first;\r\n          y = b.name.first;\r\n          break;\r\n        case \"phone\":\r\n          x = a.cell;\r\n          y = b.cell;\r\n          break;\r\n        case \"email\":\r\n          x = a.email;\r\n          y = b.email;\r\n          break;\r\n        case \"birthday\":\r\n          x = a.dob.age;\r\n          y = b.dob.age;\r\n          break;\r\n        default:\r\n          x = a;\r\n          y = b;\r\n      }\r\n      if (this.state[keyName]) {\r\n        return x === y ? 0 : x > y ? 1 : -1;\r\n      } else {\r\n        return x === y ? 0 : x > y ? -1 : 1;\r\n      }\r\n    });\r\n    this.setState({ result: sortedArray });\r\n    // set click state \r\n    if (this.state[keyName]) {\r\n      this.setState({ [keyName]: false })\r\n    } else {\r\n      this.setState({ [keyName]: true })\r\n    }\r\n  };\r\n  // handle search input\r\n  handleInputChange = event => {\r\n    // get the value and name of the input that triggered the change\r\n    let value = event.target.value;\r\n    const name = event.target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    // trim and make search input lower case\r\n    let searchInputLower = value.trim().toLowerCase();\r\n    let resultFiltered = [];\r\n    // if search input value is empty, set results array to empty\r\n    if (searchInputLower === \"\") {\r\n      resultFiltered.length = 0;\r\n    } else {\r\n      // else filter through the state.result for any matches\r\n      resultFiltered = this.state.result.filter(item => {\r\n        return (item.name.first.toLowerCase().includes(searchInputLower) || item.name.last.toLowerCase().includes(searchInputLower) || item.cell.includes(searchInputLower))\r\n      })\r\n    };\r\n    // update state. if no results set state to original list, else set it to results list\r\n    if (searchInputLower === \"\" || resultFiltered.length === 0) {\r\n      this.setState({ result: this.state.resultOriginal })\r\n    } else {\r\n      this.setState({ result: resultFiltered })\r\n    }\r\n  };\r\n  // button click handler to reset the list to the original list after the user has sorted the list or searched for a person in the list\r\n  resetList = () => {\r\n    this.setState({\r\n      result: this.state.resultOriginal,\r\n      name: false,\r\n      phone: false,\r\n      email: false,\r\n      birthday: false,\r\n      searchInput: \"\"\r\n    })\r\n    document.getElementById(\"search-input\").value = \"\";\r\n  };\r\n\r\n  // render UI\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"main\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 border border-dark\">\r\n              <h1 className=\"text-center\" style={{ color: \"#C7493A\" }}>Random Employee Directory</h1>\r\n            </div>\r\n            <div className=\"col-md-10 col-12 text-center d-flex mx-auto pt-2\">\r\n              <p className=\"\">Welcome to the Random Employee Directory! This random list of employees was generated from the Random User API. This app allows sorting through the list by each category except photo (click on the column titles to sort in both directions!). This app also allows for searching the list by name or phone number! Click the Reset List button to return the list to its original form when the page was loaded!</p>\r\n            </div>\r\n          </div>\r\n          <UserSearch\r\n            handleInputChange={this.handleInputChange}\r\n            resetList={this.resetList}\r\n          />\r\n          <br />\r\n          <UserCategories handleSort={this.handleSort}\r\n          />\r\n          <br />\r\n          {this.state.result.map(item => <UserList key={item.login.uuid} {...item}\r\n          />)}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserContainer;","import React from \"react\";\nimport UserContainer from \"./components/UserContainer\";\n\nconst App = () => {\n  return <UserContainer />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}